{"version":3,"sources":["services/api.js","App/App.styled.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/Loader/Spinner.js","components/Button/Button.styled.js","components/Button/Button.js","App/App.js","index.js"],"names":["axios","defaults","baseURL","fetchImages","searchQuery","page","a","params","get","response","data","hits","Container","styled","div","Header","header","SearchForm","form","SubmitBtn","button","BtnLabel","span","Input","input","SearchBar","onSearch","onSubmit","e","preventDefault","target","elements","value","trim","toLowerCase","toast","info","type","name","autoComplete","autoFocus","placeholder","Gallery","ul","Item","li","Image","img","GalleryItem","webformatURL","tags","onImageClick","largeImageURL","onClick","src","alt","ImageGallery","images","onImageSelect","map","image","id","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","event","code","createPortal","currentTarget","override","css","Spinner","color","loading","useState","size","Btn","LoadBtn","App","setSearchQuery","setImages","status","setStatus","setPage","selectedImage","setSelectedImage","length","Error","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","warning","getIamges","handleQueryChange","query","resetState","imageURL","prototypes","PropTypes","func","isRequired","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd9cc044.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nexport const fetchImages = async (searchQuery, page) => {\n  const API_KEY = '21740199-d7b6e81c83ae38a8fb2587200';\n  const params = `page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const response = await axios.get(`?q=${searchQuery}&${params}`);\n  return response.data.hits;\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;","import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #E010A1;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SubmitBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n  opacity: 1;\n}\n`;\nexport const BtnLabel = styled.span`\n position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;   \n\n","import PropTypes from \"prop-types\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Header, SearchForm, SubmitBtn, BtnLabel, Input } from \"./Searchbar.styled\"\n\nexport function SearchBar({ onSearch }) {\n  const handleSearch = e => {\n    e.preventDefault();\n    if (e.target.elements.searchQuery.value.trim() === \"\") {\n      toast.info('Please, enter query!');\n      return\n    }\n    onSearch(e.target.elements.searchQuery.value.toLowerCase().trim());\n    e.target.elements.searchQuery.value = \"\";\n  };\n\n    return (\n        <Header>\n          <SearchForm\n              onSubmit={handleSearch}>\n                <SubmitBtn type=\"submit\">\n                    <BtnLabel>Search</BtnLabel>\n                </SubmitBtn>\n                <Input\n                    name=\"searchQuery\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"/>\n          </SearchForm>\n        </Header>\n    );\n}\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};","import styled from \"@emotion/styled\";\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n  transform: scale(1.03);\n  cursor: zoom-in;\n  }\n`;","import PropTypes from \"prop-types\";\nimport { Item, Image } from \"./ImageGalleryItem.styled\";\n\nexport function GalleryItem({ webformatURL, tags, onImageClick, largeImageURL,}) {\n  return (\n    <Item onClick={() => onImageClick(largeImageURL)}>\n      <Image src={webformatURL} alt={tags}\n      />\n    </Item>\n  );\n}\n\nGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};","import PropTypes from \"prop-types\";\nimport { Gallery } from \"./ImageGallery.styled\";\nimport { GalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\n\nexport function ImageGallery({ images, onImageSelect }) {\n    // console.log(images)\n    return (\n        <Gallery>\n            {images.map(image => (\n                    <GalleryItem\n                        key={image.id}\n                        webformatURL={image.webformatURL}\n                        tags={image.tags}\n                        onImageClick={onImageSelect}\n                        largeImageURL={image.largeImageURL}\n                />\n            ))}\n        </Gallery>\n    )\n};\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onImageSelect: PropTypes.func.isRequired,\n};","import styled from \"@emotion/styled\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalContainer = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;","// import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalContainer, Image } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport function Modal ({largeImageURL, onClose}) {\n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeyDown);\n\n        return () => {\n        window.addEventListener(\"keydown\", handleKeyDown)\n        }\n    })\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n    return createPortal(\n        <Overlay onClick={handleOverlayClick}>\n            <ModalContainer>\n                <Image src={largeImageURL} alt=\"\"/>\n            </ModalContainer>\n      </Overlay>,\n      modalRoot,\n    );\n}\n","import { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport GridLoader from \"react-spinners/GridLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport function Spinner() {\n  return (\n      <GridLoader color=\"#E010A1\" loading={useState(true)} css={override} size={80} />\n  );\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  margin: 0 auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #E010A1;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    :hover,\n    :focus {\n  background-color: #B31583;\n}\n`;","import PropTypes from 'prop-types';\nimport { Btn } from \"./Button.styled\";\n\nexport function LoadBtn({ onClick }) {\n    return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n};\n\nLoadBtn.prototypes = {\n  onClick: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchImages } from '../services/api';\nimport { Container } from './App.styled';\nimport { SearchBar } from '../components/Searchbar/Searchbar';\nimport { ImageGallery } from '../components/ImageGallery/ImageGallery';\nimport { Modal } from '../components/Modal/Modal';\nimport { Spinner } from '../components/Loader/Spinner';\nimport { LoadBtn } from '../components/Button/Button'\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(\"idle\");\n  const [page, setPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return\n    }\n\n    async function getIamges() {\n      setStatus(\"pending\");\n      try {\n        const images = await fetchImages(searchQuery, page);\n\n        if (!images.length) {\n          throw new Error();\n        }\n        \n        setImages(prevImages => [...prevImages, ...images]);\n        setStatus(\"resolved\");\n        \n        page > 1 &&\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        \n      } catch (error) {\n        toast.warning(`Not Found any images by query: ${searchQuery}`);\n        setStatus(\"rejected\");\n      }\n    }\n    getIamges();\n  }, [searchQuery, page]);\n\n  const handleQueryChange = query => {\n    if (query === searchQuery) {\n      toast.info('Please, enter new query!');\n      return;\n    }\n    resetState();\n    setSearchQuery(query)\n  };\n\n  const resetState = () => {\n    setSearchQuery(\"\");\n    setPage(1);\n    setImages([]);\n    setSelectedImage(null);\n    setStatus(\"idle\");\n  };\n  const toggleModal = () => {\n   setSelectedImage(!selectedImage);\n  };\n\n  const incrementPage = () => {\n    setPage( page => page + 1 );\n  };\n\n  const handleSelectedImage = imageURL => {\n    setSelectedImage(imageURL);\n  };\n\n  if (status === \"idle\") {\n      return (\n        <Container>\n          <SearchBar onSearch={handleQueryChange} />\n        </Container>\n      )\n    }\n\n    if (status === \"pending\") {\n      return (\n        <Container>\n          <SearchBar onSearch={handleQueryChange} />\n          <Spinner />\n        </Container>\n      )\n   }\n\n    if (status === \"resolved\") {\n          return (\n          <Container>\n            <SearchBar onSearch={handleQueryChange} />\n            <ImageGallery images={images} onImageSelect={handleSelectedImage}/>\n            {images.length > 0 && <LoadBtn onClick={incrementPage} />}\n            {selectedImage && (\n              <Modal largeImageURL={selectedImage} onClose={toggleModal} />\n            )}\n            <ToastContainer />\n          </Container>\n        )}\n      \n    if (status === \"rejected\") {\n        return (\n          <Container>\n            <SearchBar onSearch={handleQueryChange} />\n            <ToastContainer />\n          </Container>\n        )}\n}\n\n// export default class App extends Component {\n//   state = {\n//     searchQuery: null,\n//     images: [],\n//     status: 'idle',\n//     page: 1,\n//     // showModal: false,\n//     selectedImage: null,\n//   };\n\n//   async componentDidUpdate(prevProps, prevState) {\n//     const { searchQuery, page } = this.state;\n//     if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n//       this.setState({ status: \"pending\" });\n//       try {\n//         const images = await fetchImages(searchQuery, page);\n//         if (!images.length) {\n//           throw new Error();\n//         }\n//         this.setState((prevState) => ({\n//           images: [...prevState.images, ...images],\n//           status: \"resolved\",\n//         }));\n//       } catch (error) {\n//         this.setState({\n//           status: \"rejected\"\n//         });\n//         toast.warning(`Not Found any images by query: ${searchQuery}`);\n//       }\n\n//       page > 1 &&\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: \"smooth\",\n//         });\n//     }\n//   };\n\n//   handleQueryChange = searchQuery => {\n//     if (this.state.searchQuery === searchQuery) {\n//       toast.info('Please, enter new query!');\n//       return;\n//     }\n//     this.resetState();\n//     this.setState({ searchQuery });\n//   };\n\n//   resetState = () => {\n//     this.setState({\n//       searchQuery: \"\",\n//       page: 1,\n//       images: [],\n//       selectedImage: null,\n//       status: \"idle\",\n//     });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ selectedImage }) => ({\n//       selectedImage: !selectedImage,\n//     }));\n//   };\n\n//   incrementPage = () => {\n//     this.setState({ page: this.state.page + 1 });\n//   };\n\n//   handleSelectedImage = imageURL => {\n//     this.setState({ selectedImage: imageURL });\n//   };\n  \n\n//   render() {\n\n//     const { images, selectedImage, status } = this.state;\n\n//     if (status === \"idle\") {\n//       return (\n//         <Container>\n//           <SearchBar onSearch={this.handleQueryChange} />\n//         </Container>\n//       )\n//     }\n\n//     if (status === \"pending\") {\n//       return (\n//         <Container>\n//           <SearchBar onSearch={this.handleQueryChange} />\n//           <Spinner />\n//         </Container>\n//       )\n//    }\n\n//     if (status === \"resolved\") {\n//           return (\n//           <Container>\n//             <SearchBar onSearch={this.handleQueryChange} />\n//             <ImageGallery images={images} onImageSelect={this.handleSelectedImage}/>\n//             {images.length > 0 && <LoadBtn onClick={this.incrementPage} />}\n//             {selectedImage && (\n//               <Modal largeImageURL={selectedImage} onClose={this.toggleModal} />\n//             )}\n//             <ToastContainer />\n//           </Container>\n//         )}\n      \n//     if (status === \"rejected\") {\n//         return (\n//           <Container>\n//             <SearchBar onSearch={this.handleQueryChange} />\n//             <ToastContainer />\n//           </Container>\n//         )}\n//   }\n// }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}